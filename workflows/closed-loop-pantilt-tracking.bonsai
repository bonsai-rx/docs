<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:CameraCapture">
          <cv:Index>0</cv:Index>
          <cv:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:ConvertColor">
          <cv:Conversion>Bgr2Hsv</cv:Conversion>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:HsvThreshold">
          <cv:Lower>
            <cv:Val0>0</cv:Val0>
            <cv:Val1>0</cv:Val1>
            <cv:Val2>0</cv:Val2>
            <cv:Val3>0</cv:Val3>
          </cv:Lower>
          <cv:Upper>
            <cv:Val0>179</cv:Val0>
            <cv:Val1>255</cv:Val1>
            <cv:Val2>255</cv:Val2>
            <cv:Val3>255</cv:Val3>
          </cv:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Centroid" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>X</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Rescale">
          <dsp:Min>0</dsp:Min>
          <dsp:Max>640</dsp:Max>
          <dsp:RangeMin>-1</dsp:RangeMin>
          <dsp:RangeMax>1</dsp:RangeMax>
          <dsp:RescaleType>Linear</dsp:RescaleType>
        </Combinator>
      </Expression>
      <Expression xsi:type="py:PythonTransform">
        <py:Script>position = 90.0

@returns(float)
def process(value):
  global position
  temp = position + value

  # update the position only when the angle range is valid
  if (20.0 &lt; temp and temp &lt; 160):
     position = temp
  return position
</py:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:ServoOutput">
          <ard:Pin>8</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Y</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dsp:Rescale">
          <dsp:Min>0</dsp:Min>
          <dsp:Max>480</dsp:Max>
          <dsp:RangeMin>1</dsp:RangeMin>
          <dsp:RangeMax>-1</dsp:RangeMax>
          <dsp:RescaleType>Linear</dsp:RescaleType>
        </Combinator>
      </Expression>
      <Expression xsi:type="py:PythonTransform">
        <py:Script>position = 90.0

@returns(float)
def process(value):
  global position
  temp = position + value

  # update the position only when the angle range is valid
  if (20.0 &lt; temp and temp &lt; 160):
     position = temp
  return position
</py:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:ServoOutput">
          <ard:Pin>9</ard:Pin>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="3" To="8" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>